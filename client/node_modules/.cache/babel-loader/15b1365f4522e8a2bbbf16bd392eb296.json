{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k_daw\\\\OneDrive\\\\\\u30C7\\u30B9\\u30AF\\u30C8\\u30C3\\u30D7\\\\U of U Bootcamp\\\\projects\\\\shop-shop\\\\client\\\\src\\\\components\\\\CategoryMenu\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\n\nfunction CategoryMenu(_ref) {\n  let {\n    setCategory\n  } = _ref;\n  const [state, dispatch] = useStoreContext();\n  const {\n    categories\n  } = state;\n  const {\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    const handleClick = id => {\n      dispatch({\n        type: UPDATE_CURRENT_CATEGORY,\n        currentCategory: id\n      });\n    }; // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n\n\n    if (categoryData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n    }\n  }, [categoryData, dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, \"Choose a Category:\"), categories.map(item => /*#__PURE__*/React.createElement(\"button\", {\n    key: item._id,\n    onClick: () => {\n      handleClick(item._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, item.name)));\n}\n\nexport default CategoryMenu;","map":{"version":3,"names":["React","useEffect","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","useStoreContext","useQuery","QUERY_CATEGORIES","CategoryMenu","setCategory","state","dispatch","categories","data","categoryData","handleClick","id","type","currentCategory","map","item","_id","name"],"sources":["C:/Users/k_daw/OneDrive/デスクトップ/U of U Bootcamp/projects/shop-shop/client/src/components/CategoryMenu/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\n\nfunction CategoryMenu({ setCategory }) {\n  const [state, dispatch] = useStoreContext();\n  const { categories } = state;\n  const { data: categoryData } = useQuery(QUERY_CATEGORIES);\n\nuseEffect(() => {\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n  // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n  if (categoryData) {\n    // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n    dispatch({\n      type: UPDATE_CATEGORIES,\n      categories: categoryData.categories\n    });\n  }\n}, [categoryData, dispatch]);\n\nreturn (\n  <div>\n    <h2>Choose a Category:</h2>\n    {categories.map(item => (\n      <button\n        key={item._id}\n        onClick={() => {\n          handleClick(item._id);\n        }}\n      >\n        {item.name}\n      </button>\n    ))}\n  </div>\n);\n  \n}\n\nexport default CategoryMenu;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,EAA4BC,uBAA5B,QAA2D,qBAA3D;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;;AAEA,SAASC,YAAT,OAAuC;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACrC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,eAAe,EAAzC;EACA,MAAM;IAAEO;EAAF,IAAiBF,KAAvB;EACA,MAAM;IAAEG,IAAI,EAAEC;EAAR,IAAyBR,QAAQ,CAACC,gBAAD,CAAvC;EAEFL,SAAS,CAAC,MAAM;IACd,MAAMa,WAAW,GAAGC,EAAE,IAAI;MACxBL,QAAQ,CAAC;QACPM,IAAI,EAAEb,uBADC;QAEPc,eAAe,EAAEF;MAFV,CAAD,CAAR;IAID,CALD,CADc,CAOd;;;IACA,IAAIF,YAAJ,EAAkB;MAChB;MACAH,QAAQ,CAAC;QACPM,IAAI,EAAEd,iBADC;QAEPS,UAAU,EAAEE,YAAY,CAACF;MAFlB,CAAD,CAAR;IAID;EACF,CAfQ,EAeN,CAACE,YAAD,EAAeH,QAAf,CAfM,CAAT;EAiBA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBADF,EAEGC,UAAU,CAACO,GAAX,CAAeC,IAAI,iBAClB;IACE,GAAG,EAAEA,IAAI,CAACC,GADZ;IAEE,OAAO,EAAE,MAAM;MACbN,WAAW,CAACK,IAAI,CAACC,GAAN,CAAX;IACD,CAJH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAMGD,IAAI,CAACE,IANR,CADD,CAFH,CADF;AAgBC;;AAED,eAAed,YAAf"},"metadata":{},"sourceType":"module"}